from aiogram import types
import time
import logging
#######################################
from main import dp, bot
from data import BOT_AUTHOR, RATE_LIMIT
from keyboards import *
from utils import rate_limit
from unix import unix_to_date
import sqlite

logger = logging.getLogger("bot.handlers.commands.start")

@rate_limit(limit=RATE_LIMIT)
@dp.message_handler(commands=["start"])
async def start(message: types.Message) -> None:
	try:
		name = message.from_user.first_name.title()

		if sqlite.user_already_exists(message.from_user.id):
			samples        = sqlite.get_user_samples(message.from_user.id)
			subscribe_time = sqlite.get_user_subtime(message.from_user.id)
			subscribe_date = unix_to_date(subscribe_time)
			registration   = unix_to_date(sqlite.get_user_registration(message.from_user.id))
				
			time_now = int(time.time())

			if subscribe_time == 0:
				subscribe = "–ë–µ–∑–ª–∏–º–∏—Ç üéµ‚ö°Ô∏è"
			elif subscribe_time > time_now:
				subscribe = f"–¥–æ {subscribe_date}"
			elif subscribe_time < time_now or \
				 subscribe_time == time_now:
				subscribe = f"–∏—Å—Ç–µ–∫–ª–∞ {subscribe_date}"

			await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b><i>{name}</i></b>! –Ø —Ç–µ–±—è –ø–æ–º–Ω—é, –≤–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\n\
üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å id{message.from_user.id}</b>\n\
‚îú <b>–ü–æ–ª—É—á–µ–Ω–æ —Å—ç–º–ø–ª–æ–≤</b>: {samples}\n\
‚îú <b>–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É</b>: {registration}\n\
‚îî <b>–ü–æ–¥–ø–∏—Å–∫–∞</b>: {subscribe}",
				reply_markup=general_markup)

		else:
			await bot.send_photo(
				message.chat.id,
				"https://i.postimg.cc/rpzVt1v0/help.jpg",
				caption=f"–ü—Ä–∏–≤–µ—Ç, <b><i>{name}</i></b>!\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –º—É–∑—ã–∫–∏. \n\n\
<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?</b>\n\n\
–í—Å—ë –ø—Ä–µ–¥–µ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ, —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –≤—Å–µ –Ω–æ–≤—ã–µ —Å—ç–º–ø–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–π—Ç–µ <i>looperman.com</i> –≤—ã—Ö–æ–¥–∏—Ç —Å—ç–º–ø–ª - –æ–Ω —Å—Ä–∞–∑—É –∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–µ–±–µ!\n\
–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ <b>–ø–µ—Ä–≤—ã–º</b> —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ—á–Ω—ã–µ –±–∏—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º.\n\
–°–∫–∞—á–∞—Ç—å –≤—ã –µ–≥–æ —Å–º–æ–∂–µ—Ç–µ <b>–ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ</b>, –ª–∏–±–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É \"<b>–°–∫–∞—á–∞—Ç—å</b> ‚¨áÔ∏è\".\n\n\
<i>–Ø –≤—ã–¥–∞–ª —Ç–µ–±–µ –¥–≤—É—Ö–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è!</i>",
				reply_markup=general_markup
			)

			sqlite.register_user(
				message.from_user.id, 
				message.from_user.username, 
				message.from_user.first_name,
				message.from_user.last_name
			)
	except Exception as ex:
		logger.critical(ex)